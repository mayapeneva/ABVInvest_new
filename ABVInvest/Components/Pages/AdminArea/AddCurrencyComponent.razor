@inject IDataService DataService

<div class="col-md-4">
    <h4> Попълнете трибуквения код на валутата, която искате да добавите: </h4>

    <EditForm Model="Input" method="post" OnValidSubmit="AddCurrencyData" FormName="addCurrencyForm">
        <DataAnnotationsValidator />
        <div class="form-group">
            <div class="row m-0 mb-3">
                <InputText @bind-Value="Input.Code" Placeholder="Валутен код" @oninput="ClearDisplayMessage" />
                <ValidationMessage For="() => Input.Code" class="text-danger" />
            </div>
            <Button Type="ButtonType.Submit" Class="add-data-button bg-bg-abvlightgreen bg-abvdarkgreen large-fontsize"> Добави </Button>
        </div>
    </EditForm>
</div>

<div class="error-messages">
    <StatusDisplayMessage DisplayMessage="@ErrorMessage" />
</div>

@code {
    private string? ErrorMessage;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task AddCurrencyData()
    {
        if (Input.Code is not null)
        {
            var result = await DataService.CreateCurrencyAsync(Input.Code);
            ErrorMessage = !result.IsSuccessful() ? $"Грешка: {string.Join(", ", result.Errors)}" : string.Format(Messages.Data.CurrencyAdded, Input.Code);
        }
    }

    private async Task ClearDisplayMessage()
    {
        ErrorMessage = string.Empty;
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = Messages.Common.RequiredField)]
        [RegularExpression("^[A-Z]{3}$", ErrorMessage = Messages.Data.CurrencyCodeError)]
        public string? Code { get; set; }
    }
}
