@page "/AdminArea/UploadDealsInfo"

@attribute [Authorize(Roles = ShortConstants.Role.Admin)]

@rendermode InteractiveServer

@inject IDeserialiser UploadsHelper
@inject IDealsService DealsService

<div class="container">
    <UploadForm LabelPart="сделки" AddInfoCallback="AddDeals"></UploadForm>

    <div class="status-message">
        <StatusDisplayMessage DisplayMessages="@ErrorMessages" Success="@Success" />
    </div>

    <BackToPageLink />
</div>

@code {
    private IEnumerable<string>? ErrorMessages;
    private bool Success;

    private async Task AddDeals(FileInputModel Input)
    {
        if (Input.Date != default && Input.XMLFiles is not null)
        {
            foreach (var file in Input.XMLFiles)
            {
                if (file.ContentType.EndsWith(ShortConstants.Common.XmlFileContentType))
                {
                    var fileName = Path.Combine(Directory.GetCurrentDirectory(), ShortConstants.Common.FileUploadFolder, ShortConstants.Common.UploadedFile);
                    if (file.Size > 0)
                    {
                        var deserializedDeals = await UploadsHelper.DeserialiseXmlFile<DealRowBindingModel>(fileName, file);
                        if (deserializedDeals.Count() == 0 || !ModelValidator.IsValid(deserializedDeals))
                            ErrorMessages = [Messages.Common.CouldNotUploadInformation];
                        else
                        {
                            var result = await this.DealsService.SeedDealsAsync(deserializedDeals, Input.Date.Value);
                            if (!result.IsSuccessful())
                            {
                                Success = false;
                                ErrorMessages = result.Errors;
                            }
                            else
                            {
                                Success = true;
                                ErrorMessages = [Messages.DealsAndPortfolios.UploadingSuccessfull];
                            }
                        }
                    }
                }
            }
        }
    }
}