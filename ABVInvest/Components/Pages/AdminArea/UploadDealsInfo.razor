@page "/AdminArea/UploadDealsInfo"

@attribute [Authorize(Roles = ShortConstants.Role.Admin)]

@rendermode InteractiveServer

@inject IDeserialiser UploadsHelper
@inject IDealsService DealsService

<div class="container">
    <h2 class="bg-abvmiddlegreen"> Качване на информация за сделки </h2>
    <hr />

    <div class="col-md-4">
        <h4> Тук можете да качите файлът с клиентските сделки: </h4>

        <EditForm Model="Input" method="post" OnValidSubmit="AddDeals" FormName="addDealsForm" enctype="multipart/form-data">
            <DataAnnotationsValidator />
            <div class="form-group">
                <div class="row p-0 m-0 mb-3">
                    <DateInput class="form-control" TValue="DateOnly?" @bind-Value="Input.Date" EnableMinMax="true" Min="@ShortConstants.Common.MinDate" Max="@ShortConstants.Common.MaxDate" Placeholder="Изберете дата" />
                    <ValidationMessage For="() => Input.Date" class="text-danger" />
                </div>
                <div class="row mb-3 mx-auto">
                    <InputFile class="form-control" placeholder="Клиентски сделки" OnChange="@SetFile" multiple />
                    <ValidationMessage For="() => Input.XMLFiles" class="text-danger" />
                </div>
                <Button Type="ButtonType.Submit" Class="add-data-button bg-bg-abvlightgreen bg-abvdarkgreen large-fontsize"> Качи </Button>
            </div>
        </EditForm>
    </div>

    <div class="status-message">
        <StatusDisplayMessage DisplayMessage="@ErrorMessage" />
    </div>
</div>

@code {
    private string? ErrorMessage;

    [SupplyParameterFromForm(FormName = "addDealsForm")]
    private FileInputModel Input { get; set; } = new();

    private void SetFile(InputFileChangeEventArgs e)
    {
        Input.XMLFiles = e.GetMultipleFiles();
    }

    private async Task AddDeals()
    {
        if (Input.Date is not null && Input.XMLFiles is not null)
        {
            foreach (var file in Input.XMLFiles)
            {
                if (file.ContentType.EndsWith(ShortConstants.Common.XmlFileContentType))
                {
                    var fileName = Path.Combine(Directory.GetCurrentDirectory(), ShortConstants.Common.FileUploadFolder, ShortConstants.Common.UploadedFile);
                    if (file.Size > 0)
                    {
                        var deserializedDeals = await UploadsHelper.DeserialiseXmlFile<DealRowBindingModel>(fileName, file);
                        if (deserializedDeals.Count() == 0 || !ModelValidator.IsValid(deserializedDeals))
                            ErrorMessage = Messages.Common.CouldNotUploadInformation;
                        else
                        {
                            var result = await this.DealsService.SeedDealsAsync(deserializedDeals, Input.Date.Value);
                            ErrorMessage = !result.IsSuccessful() ? ErrorMessage = $"Грешка: {string.Join(", ", result.Errors)}" : Messages.DealsAndPortfolios.UploadingSuccessfull;
                        }
                    }
                }
            }
        }
    }
}