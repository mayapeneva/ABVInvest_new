@page "/CommonArea/News"

@rendermode InteractiveServer

@inject IRssFeedParser RssFeedParser
@inject NavigationManager NavigationManager;

<div class="container">
    <h2 class="bg-abvmiddlegreen"> Новини </h2>
    <hr />

    @if (RssModels is not null && RssModels.Count() > 0)
    {
        foreach (var item in RssModels)
        {
            <a class="bg-abvdarkgreen" target="_blank" href="@item.Uri" rel="noopener noreferrer"> @item.Title </a>
            <div class="bg-abvmiddlegreen"> @item.Summary </div>
            <div class="bg-abvlightgreen"> @item.PublishedDate </div>
            <hr />
        }
    }
</div>

@code {
    private IEnumerable<RssFeedViewModel> RssModels = new List<RssFeedViewModel>();
    private Timer ?Тimer;

    protected override async Task OnInitializedAsync()
    {
        await LoadNews();
        Тimer = new Timer(async _ => await LoadNews(), null, 60000, 60000);
    }

    private async Task LoadNews()
    {
        RssModels = await RssFeedParser.LoadNewsAsync();
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Тimer?.Dispose();
    }
}
