@page "/UserArea/Portfolio"

@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IPortfoliosService PortfoliosService

<section>
    @if (!PortfolioModels.Any())
    {
        <DatePicker Title="Портфолио" LabelPart="портфолиото си" ShowDataCallback="ShowPortfolio"></DatePicker>
    }
    else
    {
        <PortfoliosGrid PortfolioModels="@PortfolioModels" Date="@Date"></PortfoliosGrid>
    }

    <div class="status-message">
        <StatusDisplayMessage DisplayMessages="@ErrorMessages" Success="@Success" />
    </div>

    <BackToPageLink />
</section>

@code {
    private IEnumerable<string>? ErrorMessages;
    private bool Success;

    private DateOnly Date;

    private IEnumerable<PortfolioViewModel> PortfolioModels = new List<PortfolioViewModel>();

    private async Task ShowPortfolio(DateOnly date)
    {
        if (date != default)
        {
            Date = date;
            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var portfolio = await PortfoliosService.GetUserDailyPortfolioAsync<PortfolioViewModel>(authenticationState.User, date);
            if (portfolio != null && portfolio.Count() > 0)
            {
                PortfolioModels = portfolio!;
                ErrorMessages = [];
            }
            else
            {
                Success = false;
                ErrorMessages = [Messages.DealsAndPortfolios.NoPortfolio];
            }
        }
    }
}
