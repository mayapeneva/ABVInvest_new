@using Syncfusion.Blazor.Grids

<div class="portfolio-table-container">
    <h2 class="bg-abvmiddlegreen"> Списък с ценни книжа към дата @Date?.ToString(ShortConstants.Common.DateTimeParseFormat) </h2>
    <hr />

    <SfGrid ID="Grid"
    DataSource="@PortfolioModels"
    @ref="DefaultGrid"
    Toolbar="@ToolbarItems"
    AllowPdfExport="true"
    AllowResizing="true"
    AllowTextWrap="true"
    AllowPaging="true"
    Height="500">
        <GridPageSettings PageSize="12"></GridPageSettings>
        <GridEvents QueryCellInfo="QueryCellInfoHandler" OnToolbarClick="ToolbarClickHandler" TValue="PortfolioViewModel"></GridEvents>
        <Syncfusion.Blazor.Grids.GridColumns>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.SecurityIssuerName) HeaderText="Емитент" MinWidth="8" Width="200">
            </Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.SecurityBfbCode) HeaderText="БФБ Код" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.SecurityIsin) HeaderText="ISIN" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.Quantity) HeaderText="Наличност" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.CurrencyCode) HeaderText="Валута" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.AveragePriceBuy) HeaderText="Средна цена" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.TotalPriceBuy) HeaderText="Стойност на придобиване" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.MarketPrice) HeaderText="Пазарна цена" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.TotalMarketPrice) HeaderText="Пазарна стойност" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.ProfitString) HeaderText="Доходност" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.ProfitPercentage) HeaderText="Доходност (%)" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(PortfolioViewModel.PortfolioShare) HeaderText="Тегло в портфейла (%)" MinWidth="8" Width="100"></Syncfusion.Blazor.Grids.GridColumn>
        </Syncfusion.Blazor.Grids.GridColumns>
    </SfGrid>
</div>

@code {
    [Parameter]
    public IEnumerable<PortfolioViewModel> PortfolioModels { get; set; } = [];

    [Parameter]
    public DateOnly? Date { get; set; }

    private List<string> ToolbarItems = new List<string>() { "PdfExport" };
    private SfGrid<PortfolioViewModel>? DefaultGrid;

    public List<PdfHeaderFooterContent> HeaderContent = new List<PdfHeaderFooterContent>
    {
        new PdfHeaderFooterContent() 
        { 
            Type = ContentType.Text,
            Value = "Something", // "АБВ Инвестиции" ,
            Position = new PdfPosition() { X = 450, Y = 10 }, 
            Style = new PdfContentStyle() { TextBrushColor = "#89BF32", FontSize = 12, Font = new PdfGridFont{ FontFamily = "Times New Roman" }, HAlign = PdfHorizontalAlign.Center }
        }
    };

    public List<PdfHeaderFooterContent> FooterContent = new List<PdfHeaderFooterContent>
    {
        new PdfHeaderFooterContent() { Type = ContentType.PageNumber,
            PageNumberType = PdfPageNumberType.Arabic,
            Position = new PdfPosition() { X = 500, Y = 10 },
            Style = new PdfContentStyle() { TextBrushColor = "#89BF32", FontSize = 12, HAlign = PdfHorizontalAlign.Center } }
    };

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_pdfexport" && DefaultGrid is not null)
        {
            PdfExportProperties exportProperties = new PdfExportProperties();
            exportProperties.FileName = $"Securities_{Date?.ToString(ShortConstants.Common.DateTimeParseFormat)}.pdf";

            exportProperties.IsRepeatHeader = true;
            exportProperties.PageSize = PdfPageSize.A4;
            exportProperties.PageOrientation = PageOrientation.Landscape;

            exportProperties.DisableAutoFitWidth = true;
            exportProperties.Columns = new List<GridColumn>()
            {
                new GridColumn(){ Field="SecurityIssuerName", HeaderText="Емитент", Width="100"},
                new GridColumn(){ Field="SecurityBfbCode", HeaderText="БФБ Код", Width="40"},
                new GridColumn(){ Field="SecurityIsin", HeaderText="ISIN", Width="90"},
                new GridColumn(){ Field="Quantity", HeaderText="Наличност", Width="80"},
                new GridColumn(){ Field="CurrencyCode", HeaderText="Валута", Width="40"},
                new GridColumn(){ Field="AveragePriceBuy", HeaderText="Средна цена", Width="50"},
                new GridColumn(){ Field="TotalPriceBuy", HeaderText="Стойност на придобиване", Width="70"},
                new GridColumn(){ Field="MarketPrice", HeaderText="Пазарна цена", Width="50"},
                new GridColumn(){ Field="TotalMarketPrice", HeaderText="Пазарна стойност", Width="70"},
                new GridColumn(){ Field="ProfitString", HeaderText="Доходност", Width="70"},
                new GridColumn(){ Field="ProfitPercentage", HeaderText="Доходност (%)", Width="50"},
                new GridColumn(){ Field="PortfolioShare", HeaderText="Тегло в портфейла (%)", Width="50"}
            };

            var theme = new PdfTheme();
            var border = new PdfBorder();
            border.Color = "#89BF32";

            var headerThemeStyle = new PdfThemeStyle()
                {
                    FontColor = "#89BF32",
                    FontName = "Times New Roman",
                    FontSize = 12,
                    Bold = true,
                    Border = border
                };
            theme.Header = headerThemeStyle;

            var recordThemeStyle = new PdfThemeStyle()
                {
                    FontColor = "#2A833F",
                    FontName = "Times New Roman",
                    FontSize = 10,
                    Border = border

                };
            theme.Record = recordThemeStyle;
            exportProperties.Theme = theme;

            var header = new PdfHeader()
                {
                    FromTop = 0,
                    Height = 50,
                    Contents = HeaderContent
                };
            exportProperties.Header = header;

            exportProperties.Footer = new PdfFooter()
                {
                    FromBottom = 0,
                    Height = 50,
                    Contents = FooterContent
                };

            await this.DefaultGrid.ExportToPdfAsync(false, exportProperties);
        }
    }

    public void QueryCellInfoHandler(QueryCellInfoEventArgs<PortfolioViewModel> args)
    {
        if (args.Data.Profit < 0)
        {
            args.Cell.AddClass(new string[] { "negative-profit" });
        }
        else if (args.Data.Profit == 0M)
        {
            args.Cell.AddClass(new string[] { "no-profit" });
        }
    }
}
