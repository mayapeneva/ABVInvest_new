@page "/UserArea/Deals"

@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IDealsService DealsService

<section>
    @if (!DealsModels.Any())
    {
        <DatePicker Title="Сделки" LabelPart="сделките, сключени за ваша сметка" ShowDataCallback="ShowDeals"></DatePicker>
    }
    else
    {
        <DealsGrid DealsModels="@DealsModels" Date="@Date"></DealsGrid>
    }

    <div class="container">
        <div class="status-message">
            <StatusDisplayMessage DisplayMessages="@ErrorMessages" Success="@Success" />
        </div>
    </div>

    <BackToPageLink />
</section>

@code {
    private IEnumerable<string>? ErrorMessages;
    private bool Success;

    private DateOnly Date;

    private IEnumerable<DealViewModel> DealsModels = new List<DealViewModel>();

    private async Task ShowDeals(DateOnly date)
    {
        if (date != default)
        {
            Date = date;
            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var deals = await DealsService.GetUserDailyDealsAsync<DealViewModel>(authenticationState.User, date);
            if (deals != null && deals.Count() > 0)
            {
                DealsModels = deals!;
                ErrorMessages = [];
            }
            else
            {
                Success = false;
                ErrorMessages = [Messages.DealsAndPortfolios.NoDeals];
            }
        }
    }
}

